// Generator: tells Prisma to make a TS client
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  directUrl    = env("DIRECT_URL")
}

// ----------------- ENUMS -----------------

enum City {
  Chandigarh
  Mohali
  Zirakpur
  Panchkula
  Other
}

enum PropertyType {
  Apartment
  Villa
  Plot
  Office
  Retail
}

enum BHK {
  ONE
  TWO
  THREE
  FOUR
  STUDIO
}

enum Purpose {
  Buy
  Rent
}

enum Timeline {
  ZERO_3M      // 0-3m
  THREE_6M     // 3-6m
  GT_6M        // >6m
  Exploring
}

enum Source {
  Website
  Referral
  Walk_in
  Call
  Other
}

enum Status {
  New
  Qualified
  Contacted
  Visited
  Negotiation
  Converted
  Dropped
}

// ----------------- MODELS -----------------

model User {
  id     String  @id @default(uuid())
  email  String? @unique
  name   String?
  buyers Buyer[]
}

model Buyer {
  id           String       @id @default(uuid())
  fullName     String
  email        String?
  phone        String
  city         City
  propertyType PropertyType
  bhk          BHK?
  purpose      Purpose
  budgetMin    Int?
  budgetMax    Int?
  timeline     Timeline
  source       Source
  status       Status       @default(New)
  notes        String?      @db.Text
  tags         String[]     @default([])
  ownerId      String
  owner        User         @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  updatedAt    DateTime     @updatedAt
  createdAt    DateTime     @default(now())
  history      BuyerHistory[]
}

model BuyerHistory {
  id        String   @id @default(uuid())
  buyerId   String
  buyer     Buyer    @relation(fields: [buyerId], references: [id], onDelete: Cascade)
  changedBy String
  changedAt DateTime @default(now())
  diff      Json
}
